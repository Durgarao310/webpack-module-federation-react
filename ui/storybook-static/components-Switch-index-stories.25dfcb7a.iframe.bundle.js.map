{"version":3,"file":"components-Switch-index-stories.25dfcb7a.iframe.bundle.js","mappings":";;;;AAQA;AACA;AAGA;;AAIA;;AAKA;AACA;AACA;;;;;;;;;AAUA;AACA;;;;AAIA;;AClCA","sources":["webpack://ui/./src/components/Switch/style.ts","webpack://ui/./src/components/Switch/index.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const SwitchContainer = styled.label<{\n  disabled?: boolean;\n  size?: 'small' | 'medium' | 'large';\n}>`\n  display: inline-flex;\n  align-items: center;\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n  opacity: ${({ disabled }) => (disabled ? 0.6 : 1)};\n`;\n\nexport const SwitchInput = styled.input`\n  display: none;\n`;\n\nexport const SwitchSlider = styled.div<{\n  isChecked: boolean;\n  size?: 'small' | 'medium' | 'large';\n}>`\n  position: relative;\n  width: ${({ size }) => (size === 'small' ? '32px' : size === 'large' ? '48px' : '40px')};\n  height: ${({ size }) => (size === 'small' ? '16px' : size === 'large' ? '24px' : '20px')};\n  background-color: ${({ theme, isChecked }) =>\n    isChecked ? theme.colors.primary : theme.colors.surface};\n  border-radius: 12px;\n  transition: background-color 0.2s;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: 2px;\n    width: ${({ size }) => (size === 'small' ? '12px' : size === 'large' ? '20px' : '16px')};\n    height: ${({ size }) => (size === 'small' ? '12px' : size === 'large' ? '20px' : '16px')};\n    background-color: #fff;\n    border-radius: 50%;\n    transition: transform 0.2s;\n    transform: ${({ isChecked, size }) =>\n      isChecked\n        ? `translateX(${size === 'small' ? '16px' : size === 'large' ? '24px' : '20px'})`\n        : 'translateX(0)'};\n  }\n`;\n","import React from 'react';\nimport { SwitchProps } from './types';\nimport { SwitchContainer, SwitchInput, SwitchSlider } from './style';\n\nconst Switch: React.FC<SwitchProps> = ({\n  isChecked,\n  onChange,\n  disabled = false,\n  size = 'medium',\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (disabled) return;\n    onChange(event.target.checked);\n  };\n\n  return (\n    <SwitchContainer disabled={disabled} size={size}>\n      <SwitchInput\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={handleChange}\n        disabled={disabled}\n      />\n      <SwitchSlider isChecked={isChecked} size={size} />\n    </SwitchContainer>\n  );\n};\n\nexport default Switch;\n"],"names":[],"sourceRoot":""}